plugins {
    id 'fabric-loom' version '0.6-SNAPSHOT'
    id 'org.cadixdev.licenser' version '0.5.0'
    id 'maven-publish'
}

import net.fabricmc.loom.util.OperatingSystem;
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url "https://alexiil.uk/maven/"
        content {
            includeGroup "alexiil.mc.lib"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft}"
    mappings "net.fabricmc:yarn:${project.minecraft}+build.${project.yarn}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader}"

    modCompileOnly "alexiil.mc.lib:libblockattributes-core:${project.lba}"
    modCompileOnly "teamreborn:energy:${project.tr_energy}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"

    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}

java {
    withSourcesJar()
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

jar {
    from "LICENSE"
    manifest {
        attributes([
                "Implementation-Title"    : project.archives_base_name,
                "Implementation-Version"  : "${project.version}",
                "Implementation-Vendor"   : "Horizon Studio",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Maven-Artifact"          : "${group}:${archivesBaseName}:${project.version}",
                "ModSide"                 : "BOTH",
        ],)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.hrznstudio'
            artifactId = 'galacticraft-energy'

            artifact(jar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
            artifact(javadocJar)
        }
    }
    if (OperatingSystem.isCIBuild()) {
        repositories {
            maven {
                url "s3://cdn.hrzn.studio/maven"
                authentication {
                    awsIm(AwsImAuthentication)
                }
            }
        }
    } else {
        repositories {
            mavenLocal()
        }
    }
}

license {
    header = project.file("LICENSE_HEADER.txt")
    include '**/com/hrznstudio/**/*.java'
    include 'build.gradle'
    ext {
        year = Date.newInstance().toYear().toString()
        company = "HRZN LTD"
    }
}
